{"version":3,"sources":["components/Content/table/table.module.css","Vector.svg","components/Header/Header.jsx","components/Navbar/Navbar.jsx","store/tableReducer.js","components/Content/charts/donutChart.js","components/Content/charts/histogramChart.js","components/Content/table/customTable.jsx","components/Content/Content.jsx","App.js","reportWebVitals.js","store/store.js","index.js","components/Navbar/Navbar.module.css","components/Content/Content.module.css","components/Header/Header.module.css"],"names":["module","exports","Header","className","c","header","title","inputWrapper","img","src","search","alt","type","input","Navbar","list","listItem","hr","rowSlice","createSlice","name","initialState","rows","reducers","addNewRow","state","id","length","registrationDate","lastActivityDate","updateRow","action","payload","filter","userInfo","loadUsersInfo","map","user","substring","sendUsersInfo","forEach","a","axios","post","catch","error","myError","response","data","errors","alert","Object","keys","useUsersInfo","useSelector","table","slice","sort","b","actions","setRows","dispatch","getState","get","saveUsersInfo","value","toDays","ms","isUserActive","returnDate","Date","DonutChart","usersInfo","returnedUsersCounter","calculate","PieChart","width","height","Pie","dataKey","cx","cy","outerRadius","fill","label","isAnimationActive","Tooltip","userData","userLifespan","userCount","clearUserData","updateUserData","isAdded","push","HistogramChart","props","BarChart","margin","top","right","left","bottom","barSize","XAxis","scale","padding","YAxis","Legend","Bar","CustomTableCell","propertyName","onChange","align","isFirstTableRow","classes","useStyles","TableCell","tableCell","td","autoFocus","firstInput","e","TextField","defaultValue","textField","target","InputLabelProps","shrink","StyledTableCell","withStyles","theme","head","opacity","color","border","body","fontSize","fontFamily","fontStyle","fontWeight","StyledTableRow","TableRow","makeStyles","minWidth","button","marginTop","textTransform","CustomTable","useDispatch","row","TableContainer","Table","TableHead","TableBody","Button","startIcon","size","onClick","disableRipple","CustomizedTables","React","useState","shouldShow","setState","wrapper","buttonWrapper","variant","disableElevation","enableCharts","disableCharts","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","configureStore","reducer","tableReducer","middleware","thunkMiddleware","store","ReactDOM","render","document","getElementById"],"mappings":"uGACAA,EAAOC,QAAU,CAAC,QAAU,uBAAuB,MAAQ,qBAAqB,GAAK,kBAAkB,WAAa,4B,yHCDrG,G,OAAA,IAA0B,oC,wBCoB1BC,EAfF,WAEX,OACE,yBAAQC,UAAWC,IAAEC,OAArB,UACE,qBAAKF,UAAWC,IAAEE,MAAlB,0BAGA,sBAAKH,UAAWC,IAAEG,aAAlB,UACE,qBAAKJ,UAAWC,IAAEI,IAAKC,IAAKC,EAAQC,IAAI,KACxC,uBAAOC,KAAK,OAAOT,UAAWC,IAAES,e,iBCQzBC,EAlBF,WAEX,OACE,8BACE,qBAAIX,UAAWC,IAAEW,KAAjB,UACE,oBAAIZ,UAAWC,IAAEY,SAAjB,sBACA,oBAAIb,UAAWC,IAAEa,KACjB,oBAAId,UAAWC,IAAEY,SAAjB,qBACA,oBAAIb,UAAWC,IAAEa,KACjB,oBAAId,UAAWC,IAAEY,SAAjB,sBACA,oBAAIb,UAAWC,IAAEa,KACjB,oBAAId,UAAWC,IAAEY,SAAjB,qBACA,oBAAIb,UAAWC,IAAEa,W,2ICRlB,IAAMC,EAAWC,YAAY,CAClCC,KAAM,OACNC,aAAc,CACZC,KAAM,IAERC,SAAU,CACRC,UAAW,SAACC,GACV,MAAO,CACLH,KAAK,GAAD,mBACCG,EAAMH,MADP,iBAZQI,EAeMD,EAAMH,KAAKK,OAAS,EAftBC,EAeyB,aAfPC,EAeqB,aAdtD,CAAEH,KAAIE,mBAAkBC,yBADjC,IAAoBH,EAAIE,EAAkBC,GAoBtCC,UAAW,SAACL,EAAOM,GACjB,IAAQC,EAAYD,EAAZC,QACR,MAAO,CACLV,KAAK,GAAD,mBACCG,EAAMH,KAAKW,QAAO,SAACC,GAAD,OAAcA,EAASR,KAAOM,EAAQN,OADzD,gBAGGM,OAKXG,cAAe,SAACV,EAAOM,GACrB,MAAO,CACLT,KAAMS,EAAOC,QAAQI,KAAI,SAACC,GAAD,MAAW,CAClCX,GAAIW,EAAKX,GACTE,iBAAkBS,EAAKT,iBAAiBU,UAAU,EAAG,IACrDT,iBAAkBQ,EAAKR,iBAAiBS,UAAU,EAAG,UAI3DC,cAAe,SAACd,GACdA,EAAMH,KAAKkB,QAAX,uCAAmB,WAAOH,GAAP,SAAAI,EAAA,sEACXC,IACHC,KAAK,yDAAqDN,GAC1DO,OAAM,SAACC,GAEN,IAAMC,EAAUD,EAAME,SAASC,KAAKC,OACpCC,MAAMJ,EAAQK,OAAOC,KAAKN,GAAS,QANtB,2CAAnB,2DAaOO,EAAe,WAE1B,OADkBC,aAAY,SAAC7B,GAAD,OAAWA,EAAM8B,MAAMjC,QACpCkC,QAAQC,MAAK,SAAChB,EAAGiB,GAAJ,OAAUjB,EAAEf,GAAKgC,EAAEhC,OAGnD,EAAyCR,EAASyC,QAA1CxB,EAAR,EAAQA,cAAeI,EAAvB,EAAuBA,cAChB,EAA0CrB,EAASyC,QAA3CnC,EAAR,EAAQA,UAAoBM,GAA5B,EAAmB8B,QAAnB,EAA4B9B,W,4CAE5B,WAA8B+B,EAAUC,GAAxC,eAAArB,EAAA,sEACkBC,IAAMqB,IAC3B,qDAFG,OACChB,EADD,OAILc,EAAS1B,EAAcY,EAASC,OAJ3B,4C,sBAMA,SAASgB,EAAcH,EAAUC,GACtCD,EAAStB,KAGIrB,QAAf,QCxEI8B,EAAO,CACP,CAAE5B,KAAM,YAAa6C,MAAO,GAC5B,CAAE7C,KAAM,YAAa6C,MAAO,IAqBnBC,EAAS,SAACC,GAKnB,OAJcA,EAAK,IACK,GACF,GACH,IAIjBC,EAAe,SAAC/B,GAClB,IAAIgC,EAAa,IAAIC,KAAK,IAAIA,KAAKjC,EAAKR,kBAAoB,IAAIyC,KAAKjC,EAAKT,mBAE1E,OADAyC,EAAaH,EAAOG,IACH,GAqBNE,EAfI,WAKf,OA5BAvB,EAAO,CACH,CAAE5B,KAAM,YAAa6C,MAAO,GAC5B,CAAE7C,KAAM,YAAa6C,MAAO,IAdlB,SAACO,GACf,IAAIC,EAAuB,EAC3BD,EAAUpC,KAAI,SAAAC,GACP+B,EAAa/B,KACZW,EAAK,GAAGiB,OAAS,EACjBQ,GAAwB,MAGhCzB,EAAK,GAAGiB,MAAQO,EAAU7C,OAAS8C,EA+BnCC,CADkBrB,KAGd,8BACI,eAACsB,EAAA,EAAD,CAAUC,MAAO,IAAKC,OAAQ,IAA9B,UACI,cAACC,EAAA,EAAD,CAAK9B,KAAMA,EAAM+B,QAAQ,QAAQC,GAAG,MAAMC,GAAG,MAAMC,YAAa,GAAIC,KAAK,UAAUC,OAAK,EAACC,kBAAkB,SAC3G,cAACC,EAAA,EAAD,U,6CCjDZC,EAAW,CACb,CACEC,aAAc,EACdC,UAAW,IAeTC,EAAgB,WACpBH,EAAW,CACT,CACEC,aAAc,EACdC,UAAW,KAKXE,EAAiB,SAACH,GACtB,IAAII,GAAU,EACdL,EAASnD,KAAI,SAAAC,GACRA,EAAKmD,eAAiBA,IACvBnD,EAAKoD,WAAa,EAClBG,GAAU,MAGVA,GACFL,EAASM,KAAK,CACZL,aAAcA,EACdC,UAAW,KA+BFK,GA1BQ,WACrB,IArCiBC,EAqCXvB,EAAYnB,IAGlB,OAxCiB0C,EAsCPvB,EApCVkB,IACAK,EAAM3D,KAAI,SAAAC,GACR,IAAIT,EAAmB,IAAI0C,KAAKjC,EAAKT,kBACjCC,EAAmB,IAAIyC,KAAKjC,EAAKR,kBACjC2D,EAAetB,EAAOrC,EAAmBD,GAC7C+D,EAAeH,MAkCf,eAACQ,EAAA,EAAD,CACEpB,MAAO,IACPC,OAAQ,IACR7B,KAAMuC,EACNU,OAAQ,CACNC,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,GAEVC,QAAS,GAVX,UAYE,cAACC,EAAA,EAAD,CAAOxB,QAAQ,eAAeyB,MAAM,QAAQC,QAAS,CAAEL,KAAM,GAAID,MAAO,MACxE,cAACO,EAAA,EAAD,IACA,cAACpB,EAAA,EAAD,IACA,cAACqB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAK7B,QAAQ,YAAYI,KAAK,gB,6ICtD9B0B,GAAkB,SAAC,GAOlB,IANL3E,EAMI,EANJA,SACA4E,EAKI,EALJA,aACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,MACApG,EAEI,EAFJA,KACAqG,EACI,EADJA,gBAEMC,EAAUC,KAChB,OACE,eAACC,GAAA,EAAD,CAAWJ,MAAOA,EAAO7G,WAAY+G,EAAQG,UAAWjH,KAAEkH,IAA1D,UACY,WAAT1G,GAAsB,uBACrBA,KAAK,OACL2G,WAAS,EACTpH,UAAS,UAAKC,KAAES,MAAP,YAAgBoG,GAAmB7G,KAAEoH,YAC9CvD,MAAO/B,EAAS4E,GAChBC,SAAU,SAACU,GAAD,OAAOV,EAASU,EAAGvF,MAGrB,SAATtB,GACC,cAAC8G,GAAA,EAAD,CACE9G,KAAK,OACL+G,aAAczF,EAAS4E,GACvB3G,UAAW+G,EAAQU,UACnBb,SAAU,SAACU,GAAD,OACRV,EAASU,EAAD,YAAC,eACJvF,GADG,mBAEL4E,EAAeW,EAAEI,OAAO5D,UAG7B6D,gBAAiB,CACfC,QAAQ,SAQdC,GAAkBC,cAAW,SAACC,GAAD,MAAY,CAC7CC,KAAM,CACJC,QAAS,GACTC,MAAO,UACPC,OAAQ,GAEVC,KAAM,CACJC,SAAU,GACVH,MAAO,UACPI,WAAY,SACZC,UAAW,SACXC,WAAY,IACZL,OAAQ,MAZYL,CAcpBb,MAEEwB,GAAiBX,cAAW,cAAXA,CAAqBY,MAEtC1B,GAAY2B,aAAW,CAC3BvF,MAAO,CACLwF,SAAU,MAEZC,OAAQ,CACNX,MAAO,UACPG,SAAU,GACVC,WAAY,SACZC,UAAW,SACXO,UAAW,GACXN,WAAY,IACZL,OAAQ,EACRY,cAAe,UA0EJC,GAtEK,WAClB,IAAM3E,EAAYnB,IACZQ,EAAWuF,cACXlC,EAAUC,KAEVJ,EAAW,SAACU,EAAG4B,GACnBxF,EAAS/B,EAAUuH,KAGrB,OACE,gCACE,cAACC,GAAA,EAAD,CAAgBhB,OAAQ,EAAxB,SACE,eAACiB,GAAA,EAAD,CAAOpJ,UAAW+G,EAAQ3D,MAA1B,UACE,eAACiG,GAAA,EAAD,WACE,cAACxB,GAAD,CAAiBhB,MAAM,OAAvB,oBACA,cAACgB,GAAD,CAAiBhB,MAAM,SAAvB,+BACA,cAACgB,GAAD,CAAiBhB,MAAM,SAAvB,mCAEF,cAACyC,GAAA,EAAD,UACGjF,EAAUpC,KAAI,SAACF,GAAD,OACb,eAAC0G,GAAD,WACE,cAAC,GAAD,CAEI1G,WACAtB,KAAM,SACNkG,aAAc,KACdC,WACAC,MAAO,OACPC,iBAAiB,IAGrB,cAAC,GAAD,CAEI/E,WACA4E,aAAc,mBACdC,WACAnG,KAAM,OACNoG,MAAO,WAGX,cAAC,GAAD,CAEI9E,WACA4E,aAAc,mBACdC,WACAnG,KAAM,OACNoG,MAAO,aA1BQ9E,EAASR,cAkCtC,8BACE,cAACgI,EAAA,EAAD,CACEvJ,UAAW+G,EAAQ8B,OACnBW,UAAW,cAAC,KAAD,IACXC,KAAK,QACLC,QAAS,WACPhG,EAASrC,MAEXsI,eAAa,EAPf,gCCrIO,SAASC,GAAiBhE,GACvC,MAA+BiE,IAAMC,UAAS,GAA9C,mBAAOC,EAAP,KAAmBC,EAAnB,KACMtG,EAAWuF,cAEjB,OACE,sBAAKjJ,UAAWC,IAAEgK,QAAlB,UACE,cAAC,GAAD,IACA,sBAAKjK,UAAWC,IAAEiK,cAAlB,UACE,cAACX,EAAA,EAAD,CACEY,QAAQ,YACRC,kBAAgB,EAChBpK,UAAWC,IAAE4I,OACba,QAAS,WACPM,GAAS,IALb,uBAUA,cAACT,EAAA,EAAD,CACEY,QAAQ,YACRC,kBAAgB,EAChBpK,UAAWC,IAAE4I,OACba,QAAS,WAAQhG,EAASG,IAJ5B,qBASF,sBAAK7D,UAAW+J,EAAa9J,IAAEoK,aAAepK,IAAEqK,cAAhD,UACE,cAAC,EAAD,IACA,cAAC,GAAD,U,OCpBOC,OAbf,WAEE,OACE,sBAAKvK,UAAU,gBAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,UAAf,UACE,cAAC,EAAD,IACA,cAAC,GAAD,WCAOwK,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,SCHCQ,eAAe,CAC5BC,QAAS,CACP9H,MAAO+H,GAETC,WAAY,CAACC,QCCfC,GAAM5H,URyDC,SAAP,uCQvDA6H,IAASC,OACP,cAAC,IAAD,CAAUF,MAAOA,GAAjB,SACE,cAAC,GAAD,MAEFG,SAASC,eAAe,SAM1BlB,M,mBCpBA3K,EAAOC,QAAU,CAAC,KAAO,qBAAqB,SAAW,yBAAyB,GAAK,qB,mBCAvFD,EAAOC,QAAU,CAAC,QAAU,yBAAyB,OAAS,wBAAwB,cAAgB,+BAA+B,cAAgB,+BAA+B,aAAe,gC,mBCAnMD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,MAAQ,sBAAsB,MAAQ,sBAAsB,aAAe,6BAA6B,IAAM,uB","file":"static/js/main.ffa7578f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"table_wrapper__tquUD\",\"input\":\"table_input__3Z0za\",\"td\":\"table_td__2vOOV\",\"firstInput\":\"table_firstInput__2pFxf\"};","export default __webpack_public_path__ + \"static/media/Vector.43dffd10.svg\";","import React from 'react';\r\nimport search from \"../../Vector.svg\";\r\nimport c from \"./Header.module.css\";\r\n\r\n\r\nlet Header = () =>\r\n{\r\n  return (\r\n    <header className={c.header}>\r\n      <div className={c.title}>\r\n        AB Test Real\r\n      </div>\r\n      <div className={c.inputWrapper}>\r\n        <img className={c.img} src={search} alt=\"\"/>\r\n        <input type=\"text\" className={c.input} />\r\n      </div>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport c from \"./Navbar.module.css\";\r\n\r\n\r\nlet Navbar = () =>\r\n{\r\n  return (\r\n    <div>\r\n      <ul className={c.list}>\r\n        <li className={c.listItem}>Projects</li>\r\n        <hr className={c.hr} />\r\n        <li className={c.listItem}>Add new</li>\r\n        <hr className={c.hr} />\r\n        <li className={c.listItem}> Account</li>\r\n        <hr className={c.hr} />\r\n        <li className={c.listItem}>Support</li>\r\n        <hr className={c.hr} />\r\n      </ul>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Navbar;","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"axios\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction createData(id, registrationDate, lastActivityDate) {\r\n  return { id, registrationDate, lastActivityDate };\r\n}\r\n\r\nexport const rowSlice = createSlice({\r\n  name: \"rows\",\r\n  initialState: {\r\n    rows: [],\r\n  },\r\n  reducers: {\r\n    addNewRow: (state) => {\r\n      return {\r\n        rows: [\r\n          ...state.rows,\r\n          {\r\n            ...createData(state.rows.length + 1, \"2021-01-01\", \"2021-01-02\"),\r\n          },\r\n        ],\r\n      };\r\n    },\r\n    updateRow: (state, action) => {\r\n      const { payload } = action;\r\n      return {\r\n        rows: [\r\n          ...state.rows.filter((userInfo) => userInfo.id !== payload.id),\r\n          {\r\n            ...payload,\r\n          },\r\n        ],\r\n      };\r\n    },\r\n    loadUsersInfo: (state, action) => {\r\n      return {\r\n        rows: action.payload.map((user) => ({\r\n          id: user.id,\r\n          registrationDate: user.registrationDate.substring(0, 10),\r\n          lastActivityDate: user.lastActivityDate.substring(0, 10),\r\n        })),\r\n      };\r\n    },\r\n    sendUsersInfo: (state) => {\r\n      state.rows.forEach(async (user) => {\r\n        await axios\r\n          .post(\"https://ab-test-task-api.herokuapp.com​/api/Users\", user)\r\n          .catch((error) => {\r\n            debugger;\r\n            const myError = error.response.data.errors\r\n            alert(myError[Object.keys(myError)[0]]);\r\n          });\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const useUsersInfo = () => {\r\n  const usersInfo = useSelector((state) => state.table.rows);\r\n  return usersInfo.slice().sort((a, b) => a.id - b.id);\r\n};\r\n\r\nconst { loadUsersInfo, sendUsersInfo } = rowSlice.actions;\r\nexport const { addNewRow, setRows, updateRow } = rowSlice.actions;\r\n\r\nexport async function fetchUsersInfo(dispatch, getState) {\r\n  const response = await axios.get(\r\n    \"https://ab-test-task-api.herokuapp.com/api/Users/\"\r\n  );\r\n  dispatch(loadUsersInfo(response.data));\r\n}\r\nexport function saveUsersInfo(dispatch, getState) {\r\n  dispatch(sendUsersInfo());\r\n}\r\n\r\nexport default rowSlice.reducer;\r\n","import React from 'react';\r\nimport { Pie, PieChart, Tooltip } from 'recharts';\r\nimport { useUsersInfo } from '../../../store/tableReducer';\r\n\r\nlet data = [\r\n    { name: \"Retention\", value: 0 },\r\n    { name: \"New users\", value: 0}\r\n]\r\n\r\nconst calculate = (usersInfo) => {\r\n    let returnedUsersCounter = 0;\r\n    usersInfo.map(user => {\r\n        if(isUserActive(user)){\r\n            data[0].value += 1\r\n            returnedUsersCounter += 1\r\n        }\r\n    })\r\n    data[1].value = usersInfo.length - returnedUsersCounter;\r\n}\r\n\r\nconst clearData = () =>{\r\n    data = [\r\n        { name: \"Retention\", value: 0 },\r\n        { name: \"New users\", value: 0}\r\n    ]\r\n}\r\n\r\nexport const toDays = (ms) => {\r\n    let seconds = ms / 1000;\r\n    let minutes = seconds / 60;\r\n    let hours = minutes / 60;\r\n    let days = hours / 24;\r\n    return days\r\n}\r\n\r\nconst isUserActive = (user) => {\r\n    let returnDate = new Date(new Date(user.lastActivityDate) - new Date(user.registrationDate))\r\n    returnDate = toDays(returnDate)\r\n    if (returnDate > 7)\r\n        return true\r\n    else\r\n        return false\r\n}\r\n\r\nconst DonutChart = () =>\r\n{\r\n    clearData()\r\n    const usersInfo = useUsersInfo();\r\n    calculate(usersInfo)\r\n    return (\r\n        <div>\r\n            <PieChart width={400} height={400}>\r\n                <Pie data={data} dataKey=\"value\" cx=\"50%\" cy=\"50%\" outerRadius={60} fill=\"#8884d8\" label isAnimationActive=\"true\" />\r\n                <Tooltip/>\r\n            </PieChart>\r\n        </div>\r\n    )\r\n}\r\n \r\nexport default DonutChart","import { BarChart, Bar, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\nimport { toDays } from './donutChart';\r\nimport { useUsersInfo } from '../../../store/tableReducer';\r\n\r\nlet userData = [\r\n  {\r\n    userLifespan: 0,\r\n    userCount: 0,\r\n  },\r\n];\r\n\r\nconst calculate = (props) =>\r\n{\r\n  clearUserData()\r\n  props.map(user => {\r\n    let registrationDate = new Date(user.registrationDate)\r\n    let lastActivityDate = new Date(user.lastActivityDate)\r\n    let userLifespan = toDays(lastActivityDate - registrationDate)\r\n    updateUserData(userLifespan)\r\n  })\r\n}\r\n\r\nconst clearUserData = () =>{\r\n  userData = [\r\n    {\r\n      userLifespan: 0,\r\n      userCount: 0,\r\n    },\r\n  ];\r\n}\r\n\r\nconst updateUserData = (userLifespan) =>{\r\n  let isAdded = false\r\n  userData.map(user => {\r\n    if(user.userLifespan === userLifespan){\r\n      user.userCount += 1\r\n      isAdded = true;\r\n    }\r\n  })\r\n  if(!isAdded){\r\n    userData.push({\r\n      userLifespan: userLifespan,\r\n      userCount: 1\r\n    })\r\n  }\r\n}\r\n\r\nconst HistogramChart = () => {\r\n  const usersInfo = useUsersInfo();\r\n  calculate(usersInfo)\r\n\r\n  return (\r\n    <BarChart\r\n      width={500}\r\n      height={300}\r\n      data={userData}\r\n      margin={{\r\n        top: 5,\r\n        right: 30,\r\n        left: 20,\r\n        bottom: 5,\r\n      }}\r\n      barSize={20}\r\n    >\r\n      <XAxis dataKey=\"userLifespan\" scale=\"point\" padding={{ left: 10, right: 10 }} />\r\n      <YAxis />\r\n      <Tooltip />\r\n      <Legend />\r\n      <Bar dataKey=\"userCount\" fill=\"#8884d8\" />\r\n    </BarChart>\r\n    );\r\n}\r\n\r\nexport default HistogramChart","import { addNewRow, updateRow, useUsersInfo } from \"../../../store/tableReducer\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport c from \"./table.module.css\";\r\nimport { makeStyles, withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst CustomTableCell = ({\r\n  userInfo,\r\n  propertyName,\r\n  onChange,\r\n  align,\r\n  type,\r\n  isFirstTableRow,\r\n}) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <TableCell align={align} className={(classes.tableCell, c.td)}>\r\n      {type === \"number\" && (<input\r\n        type=\"text\"\r\n        autoFocus\r\n        className={`${c.input} ${isFirstTableRow && c.firstInput}`}\r\n        value={userInfo[propertyName]}\r\n        onChange={(e) => onChange(e, userInfo)}\r\n      />)\r\n      }\r\n      {type === \"date\" && (\r\n        <TextField\r\n          type=\"date\"\r\n          defaultValue={userInfo[propertyName]}\r\n          className={classes.textField}\r\n          onChange={(e) =>\r\n            onChange(e, {\r\n              ...userInfo,\r\n              [propertyName]: e.target.value,\r\n            })\r\n          }\r\n          InputLabelProps={{\r\n            shrink: true,\r\n          }}\r\n        />\r\n      )}\r\n    </TableCell>\r\n  );\r\n};\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    opacity: 0.4,\r\n    color: \"#3C5AA8\",\r\n    border: 0,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n    color: \"#5D6D97\",\r\n    fontFamily: \"Ubuntu\",\r\n    fontStyle: \"normal\",\r\n    fontWeight: 400,\r\n    border: 0,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles(() => {})(TableRow);\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 1300,\r\n  },\r\n  button: {\r\n    color: \"#5D6E97\",\r\n    fontSize: 16,\r\n    fontFamily: \"Ubuntu\",\r\n    fontStyle: \"normal\",\r\n    marginTop: 25,\r\n    fontWeight: 400,\r\n    border: 0,\r\n    textTransform: \"none\",\r\n  },\r\n});\r\n\r\nconst CustomTable = () => {\r\n  const usersInfo = useUsersInfo();\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const onChange = (e, row) => {\r\n    dispatch(updateRow(row));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TableContainer border={0}>\r\n        <Table className={classes.table}>\r\n          <TableHead>\r\n            <StyledTableCell align=\"left\">UserID</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Registration Date</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Date Last Activity</StyledTableCell>\r\n          </TableHead>\r\n          <TableBody>\r\n            {usersInfo.map((userInfo) => (\r\n              <StyledTableRow key={userInfo.id}>\r\n                <CustomTableCell\r\n                  {...{\r\n                    userInfo,\r\n                    type: \"number\",\r\n                    propertyName: \"id\",\r\n                    onChange,\r\n                    align: \"left\",\r\n                    isFirstTableRow: true,\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    userInfo,\r\n                    propertyName: \"registrationDate\",\r\n                    onChange,\r\n                    type: \"date\",\r\n                    align: \"center\",\r\n                  }}\r\n                />\r\n                <CustomTableCell\r\n                  {...{\r\n                    userInfo,\r\n                    propertyName: \"lastActivityDate\",\r\n                    onChange,\r\n                    type: \"date\",\r\n                    align: \"center\",\r\n                  }}\r\n                />\r\n              </StyledTableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <div>\r\n        <Button\r\n          className={classes.button}\r\n          startIcon={<AddIcon />}\r\n          size=\"small\"\r\n          onClick={() => {\r\n            dispatch(addNewRow());\r\n          }}\r\n          disableRipple\r\n        >\r\n          Add one more\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default CustomTable;\r\n","import Button from \"@material-ui/core/Button\";\r\nimport React from \"react\";\r\nimport c from \"./Content.module.css\";\r\nimport DonutChart from \"./charts/donutChart\";\r\nimport HistogramChart from \"./charts/histogramChart\";\r\nimport Table from \"./table/customTable\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { saveUsersInfo } from \"../../store/tableReducer\";\r\n\r\nexport default function CustomizedTables(props) {\r\n  const [shouldShow, setState] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={c.wrapper}>\r\n      <Table />\r\n      <div className={c.buttonWrapper}>\r\n        <Button\r\n          variant=\"contained\"\r\n          disableElevation\r\n          className={c.button}\r\n          onClick={() => {\r\n            setState(true);\r\n          }}\r\n        >\r\n          Calculate\r\n        </Button>\r\n        <Button\r\n          variant=\"contained\"\r\n          disableElevation\r\n          className={c.button}\r\n          onClick={() => { dispatch(saveUsersInfo) }}\r\n        >\r\n          Save\r\n        </Button>\r\n      </div>\r\n      <div className={shouldShow ? c.enableCharts : c.disableCharts}>\r\n        <DonutChart />\r\n        <HistogramChart />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import Header from \"./components/Header/Header\"\r\nimport Navbar from \"./components/Navbar/Navbar\";\r\nimport Content from \"./components/Content/Content\"\r\nimport './App.css';\r\n\r\nfunction App()\r\n{\r\n  return (\r\n    <div className=\"globalWrapper\">\r\n      <Header />\r\n      <div className=\"wrapper\">\r\n        <Navbar />\r\n        <Content />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { configureStore } from '@reduxjs/toolkit'\r\nimport tableReducer from './tableReducer'\r\nimport thunkMiddleware from 'redux-thunk'\r\n\r\nexport default configureStore({\r\n  reducer: {\r\n    table: tableReducer\r\n  },\r\n  middleware: [thunkMiddleware],\r\n})","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport store from './store/store'\r\nimport { Provider } from 'react-redux'\r\nimport { fetchUsersInfo } from './store/tableReducer'\r\n\r\nstore.dispatch(fetchUsersInfo)\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Navbar_list__2ivEm\",\"listItem\":\"Navbar_listItem__jFIH9\",\"hr\":\"Navbar_hr__v13MV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Content_wrapper__3YTW6\",\"button\":\"Content_button__bguWG\",\"buttonWrapper\":\"Content_buttonWrapper__2cdLR\",\"disableCharts\":\"Content_disableCharts___Syr_\",\"enableCharts\":\"Content_enableCharts__i7vOv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2TQsK\",\"title\":\"Header_title__vNSEA\",\"input\":\"Header_input__WBWUN\",\"inputWrapper\":\"Header_inputWrapper__3QgEw\",\"img\":\"Header_img__VLlHO\"};"],"sourceRoot":""}